# 워크플로우의 이름
name: Deploy shop to GitHub Pages

# 언제 이 워크플로우를 실행할지 결정
on:
  push:
    branches:
      - shop  # 'shop' 브랜치에 push 될 때만 실행

# 워크플로우에 필요한 권한 설정
permissions:
  contents: read  # 저장소의 내용을 읽을 수 있는 권한
  pages: write      # pages에 배포할 수 있는 권한
  id-token: write   # 인증을 위한 토큰 권한

# 실제 작업(Job) 정의
jobs:
  build:
    runs-on: ubuntu-latest
    
    # 작업 단계(Step)들
    steps:
      # 1. 소스 코드 가져오기
      - name: Checkout 🛎️
        uses: actions/checkout@v4

      # 2. Node.js 환경 설정 (React 빌드를 위해 필요)
      - name: Setup Node.js 🟩
        uses: actions/setup-node@v4
        with:
          node-version: '20'   # Node.js 버전
          cache: 'npm'         # npm 캐싱으로 속도 향상

      # 3. 의존성 패키지 설치
      - name: Install dependencies 📦
        run: npm ci

      # 4. 프로젝트 빌드 (vite.config.js의 base 설정이 여기서 사용됨)
      - name: Build project 🏗️
        # vite.config.js에 base: '/[저장소이름]/[브랜치이름]/'으로 설정이 되어 있어야 함
        run: npm run build

      - name: Upload artifact ⬆️
        uses: actions/upload-pages-artifact@v3
        with:
          # dist 폴더를 shop 라는 이름의 artifact로 업로드
          path: ./dist
          name: shop-artifact

      # 배포 작업
    deploy:
      needs: build # build 작업이 성공해야 실행됨
      runs-on: ubuntu-latest
      environment:
        name: github-pages
        url: ${{ steps.deployment.outputs.page_url }}/shop # 배포될 최종 URL
      steps:
        - name: Deploy to GitHub Pages 🚀
          id: deployment
          uses: actions/deploy-pages@v4
          with:
            artifact_name: shop-artifact